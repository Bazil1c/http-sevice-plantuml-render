#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем Ответы; // Модуль ус_Ответы подсистемы "http-сервисы".
Перем КэшКартинок; // Менеджер регистра кэширования.

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиМетодов

// Обработчик метода ресурса webhookPOST.
//
// Параметры:
//  Контекст  - Структура - См. ус_HttpСервисы.НовыйКонтекстЗапроса.
//  Результат  - Результат - См. ус_HttpСервисы.НовыйРезультатЗапроса.
//
Процедура pngGET(Контекст, Результат) Экспорт
	
	uml = ус_ОбщегоНазначения.СвойствоСтруктурыРекурсивно(Контекст.ПараметрыЗапроса, "uml");
	
	Если Не ЗначениеЗаполнено(uml) Тогда
		
		ТекстОшибки = "Missing uml parameter";
		
		Ответы.НеверныйЗапрос(Результат, ТекстОшибки);
		Возврат;
		
	КонецЕсли;
	
	НастройкиПодключения = bb_Интеграция.ПрочитатьНастройкиПодключения();
	
	ДополнительныеПараметры = Новый Структура;
	
	Authorization = СтрШаблон("Bearer %1", НастройкиПодключения.Пароль);

	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Authorization", Authorization);
	ДополнительныеПараметры.Вставить("Заголовки", Заголовки);
	
	Если СтрНайти(uml, "?") = 0 Тогда
		Разделитель = "?";
	Иначе	
		Разделитель = "&";
	КонецЕсли;

	URL = СтрШаблон("%1%2raw", uml, Разделитель);
	
	Данные = Коннектор().Get(URL, , ДополнительныеПараметры);
	
	Текст = Коннектор().КакТекст(Данные);
	
	ДвоичныеДанные = КэшКартинок.Прочитать(Текст);
	Если ДвоичныеДанные = Неопределено Тогда
		ДвоичныеДанные = СгенерированноеИзображение(Текст);
		КэшКартинок.Записать(Текст, ДвоичныеДанные);
	КонецЕсли;
	
	Результат.ТипДанных = ус_ТипыДанных.ТипДанныхPng();
	Результат.Тело = ДвоичныеДанные;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СгенерированноеИзображение(Текст) Экспорт

	ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(Текст);
	
	СжатыеДанные = СжатыеДанные(ДвоичныеДанныеСтроки);
	
	Base64Строка = Base64Строка(СжатыеДанные);
	ФорматPlantUML = ФорматPlantUML(Base64Строка);
	
	АдресСервера = "www.plantuml.com";
	Ресурс = "plantuml/png";
	
	URL = СтрШаблон("%1/%2/%3", АдресСервера, Ресурс, ФорматPlantUML);
	
	Результат = Коннектор().Get(URL);
	
	Возврат Результат.Тело;

КонецФункции

Функция СвойствоСоответствияРекурсивно(Соответствие, Знач КлючиСтрокой, ЗначениеПоУмолчанию = Неопределено)

	Возврат ус_ОбщегоНазначения.СвойствоСоответствияРекурсивно(Соответствие, КлючиСтрокой, ЗначениеПоУмолчанию);

КонецФункции

Функция Коннектор()

	Модуль = ОбщегоНазначения.ОбщийМодуль("КоннекторHTTP");
	
	Если Модуль = Неопределено Тогда
		ВызватьИсключение "Не найден КоннекторHTTP.";
	КонецЕсли;
	
	Возврат Модуль;

КонецФункции

#Область КодированиеДанных

Функция ЗаписатьZip(Данные)

#Если МобильноеПриложениеСервер Тогда
	ВызватьИсключение(НСтр("ru = 'Работа с Zip-файлами в мобильной платформе не поддерживается'"));
#Иначе
	ВременныйФайл = ПолучитьИмяВременногоФайла(".bin");
	Данные.Записать(ВременныйФайл);
	ПотокZip = Новый ПотокВПамяти;
	ЗаписьZip = Новый ЗаписьZipФайла(ПотокZip);
	ЗаписьZip.Добавить(ВременныйФайл);
	ЗаписьZip.Записать();
	УдалитьФайлы(ВременныйФайл);

	Возврат ПотокZip.ЗакрытьИПолучитьДвоичныеДанные();
#КонецЕсли

КонецФункции

Функция СжатыеДанные(Данные) 

	ЧтениеДанных = Новый ЧтениеДанных(ЗаписатьZip(Данные));

	НачальноеСмещение = 14;
	ЧтениеДанных.Пропустить(НачальноеСмещение);
	CRC32 = ЧтениеДанных.ПрочитатьЦелое32();

	РазмерСжатыхДанных = ЧтениеДанных.ПрочитатьЦелое32();
	РазмерИсходныхДанных = ЧтениеДанных.ПрочитатьЦелое32();

	РазмерИмениФайла = ЧтениеДанных.ПрочитатьЦелое16();
	РазмерДополнительногоПоля = ЧтениеДанных.ПрочитатьЦелое16();
	ЧтениеДанных.Пропустить(РазмерИмениФайла + РазмерДополнительногоПоля);

	ПотокGZip = Новый ПотокВПамяти;
	ЗаписьДанных = Новый ЗаписьДанных(ПотокGZip);
	ЧтениеДанных.КопироватьВ(ЗаписьДанных, РазмерСжатыхДанных);
	
	Возврат ПотокGZip.ЗакрытьИПолучитьДвоичныеДанные();

КонецФункции

Функция ФорматPlantUML(Данные)
	
	Результат = "";
	СтрокаИскомая = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	СтрокаПодстановки = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_"; 
	
	Для Счетчик = 0 По СтрДлина(Данные) - 1 Цикл
		
		ТекСимвол = Сред(Данные, счетчик + 1, 1);
		Позиция = СтрНайти(СтрокаИскомая, ТекСимвол); 
		Если ТекСимвол = Символы.ПС ИЛИ ТекСимвол = Символы.ВК Тогда
			Продолжить;
		КонецЕсли;
		
		Если Позиция > 0 Тогда
			Результат = Результат + Сред(СтрокаПодстановки, Позиция, 1);
		Иначе
			Результат = Результат + ТекСимвол; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции 

#КонецОбласти

#КонецОбласти

#Область Инициализация

Ответы = ОбщегоНазначения.ОбщийМодуль("ус_Ответы");
КэшКартинок = РегистрыСведений.PUR_КэшИзображений;

#КонецОбласти

#КонецЕсли